{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/App.js\";\n\n/* eslint-disable no-unused-labels */\nimport React, { useState, useEffect } from 'react';\nimport Notification from './components/Notification';\nimport Error from './components/Error';\nimport { useUsername, usePassword } from './hooks';\nimport { initBlogs, addNewBlog, likeBlog, removeBlog } from './reducers/blogReducer';\nimport { handleNotification } from './reducers/notificationReducer';\nimport { setUser, removeUser } from './reducers/userReducer';\nimport { handleError } from './reducers/errorReducer';\nimport { getAllUsers } from './reducers/usersReducer';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from 'react-router-dom';\nimport UserInformation from './components/UserInformation';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport blogService from './services/blogs';\nimport { Nav, Navbar, Button } from 'react-bootstrap';\n\nconst App = props => {\n  const _usePassword = usePassword('password'),\n        resetpasswd = _usePassword.resetpasswd,\n        password = _objectWithoutProperties(_usePassword, [\"resetpasswd\"]);\n\n  const _useUsername = useUsername('username'),\n        resetusername = _useUsername.resetusername,\n        username = _objectWithoutProperties(_useUsername, [\"resetusername\"]);\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const padding = {\n    padding: 5\n  };\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      props.getAllUsers(); //props.setUser(user)s\n\n      props.initBlogs();\n    }\n  }, []);\n\n  const handleLogout = () => {\n    try {\n      //props.removeUser()\n      setUser(null);\n      window.localStorage.removeItem('loggedBlogappUser');\n      props.handleNotification('Logout successfully, 5000');\n    } catch (exception) {\n      props.handleError('Logout failed!', 5000);\n    }\n  };\n\n  if (user === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Notification, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Login, {\n        username: username,\n        password: password,\n        resetpasswd: () => resetpasswd(),\n        resetusername: () => resetusername(),\n        handleUser: () => setUser(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Notification, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      href: \"#home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Blog App\"), React.createElement(Navbar.Toggle, {\n      \"aria-controls\": \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Navbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Nav.Link, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Home\"), React.createElement(Nav.Link, {\n      href: \"/users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Users\")), username.value, \" is logged in\", React.createElement(Button, {\n      onClick: handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"logout\"))), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Home, {\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users\",\n      render: () => React.createElement(UserInformation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    blogs: state.blogs,\n    notification: state.notification,\n    error: state.error,\n    user: state.user,\n    users: state.users\n  };\n};\n\nconst mapDispatchToProps = {\n  initBlogs,\n  addNewBlog,\n  likeBlog,\n  removeBlog,\n  handleNotification,\n  handleError,\n  setUser,\n  removeUser,\n  getAllUsers\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/App.js"],"names":["React","useState","useEffect","Notification","Error","useUsername","usePassword","initBlogs","addNewBlog","likeBlog","removeBlog","handleNotification","setUser","removeUser","handleError","getAllUsers","connect","BrowserRouter","Router","Route","Link","Redirect","withRouter","UserInformation","Home","Login","blogService","Nav","Navbar","Button","App","props","resetpasswd","password","resetusername","username","user","padding","loggedUserJSON","window","localStorage","getItem","JSON","parse","setItem","stringify","setToken","token","handleLogout","removeItem","exception","value","mapStateToProps","state","blogs","notification","error","users","mapDispatchToProps"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-labels */\nimport React, { useState, useEffect } from 'react'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\nimport { useUsername, usePassword } from './hooks'\nimport { initBlogs, addNewBlog, likeBlog, removeBlog } from './reducers/blogReducer'\nimport { handleNotification } from './reducers/notificationReducer'\nimport { setUser, removeUser } from './reducers/userReducer'\nimport { handleError } from './reducers/errorReducer'\nimport { getAllUsers } from './reducers/usersReducer'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from 'react-router-dom'\nimport UserInformation from './components/UserInformation'\nimport Home from './components/Home'\nimport Login from './components/Login'\nimport blogService from './services/blogs'\nimport { Nav, Navbar, Button } from 'react-bootstrap'\n\nconst App = ( props ) => {\n\n    const { resetpasswd, ...password } = usePassword('password')\n    const { resetusername, ...username } = useUsername('username')\n    const [user, setUser] = useState(null)\n\n    const padding = { padding: 5 }\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n            blogService.setToken(user.token)\n            props.getAllUsers()\n            //props.setUser(user)s\n            props.initBlogs()\n        }\n    }, [])\n\n    const handleLogout = () => {\n        try{\n            //props.removeUser()\n            setUser(null)\n            window.localStorage.removeItem('loggedBlogappUser')\n            props.handleNotification('Logout successfully, 5000')\n        }catch(exception){\n            props.handleError('Logout failed!', 5000)\n        }\n    }\n\n    if(user === null){\n        return(\n            <div>\n                <Notification />\n                <Error />\n                <Router>\n                    <Route exact path='/' render={() =>\n                        <Login\n                            username={username}\n                            password={password}\n                            resetpasswd={() => resetpasswd()}\n                            resetusername={() => resetusername()}\n                            handleUser={() => setUser()}\n                        /> } />\n                </Router>\n            </div>\n        )\n    }else{\n        return(\n            <div className='container'>\n                <Notification />\n                <Error />\n                <Router>\n                    <Navbar bg=\"light\" expand=\"lg\">\n                        <Navbar.Brand href=\"#home\">Blog App</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"mr-auto\">\n                                <Nav.Link href=\"/\">Home</Nav.Link>\n                                <Nav.Link href=\"/users\">Users</Nav.Link>\n                            </Nav>\n                            {username.value} is logged in\n                            <Button onClick={handleLogout}>logout</Button>\n                        </Navbar.Collapse>\n                    </Navbar>\n                    <Route exact path='/' render={() => <Home user={user}/>} />\n                    <Route path='/users' render={() => <UserInformation /> } />\n                </Router>\n            </div>\n        )\n    }\n}\n\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        blogs: state.blogs,\n        notification: state.notification,\n        error: state.error,\n        user: state.user,\n        users: state.users,\n    }\n}\n\nconst mapDispatchToProps = {\n    initBlogs,\n    addNewBlog,\n    likeBlog,\n    removeBlog,\n    handleNotification,\n    handleError,\n    setUser,\n    removeUser,\n    getAllUsers,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)"]},"metadata":{},"sourceType":"module"}