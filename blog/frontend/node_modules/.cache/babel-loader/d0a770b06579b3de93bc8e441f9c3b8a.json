{"ast":null,"code":"import blogService from '../services/blogs';\nexport const addNewBlog = blog => {\n  return async dispatch => {\n    const data = await blogService.create(blog);\n    dispatch({\n      type: 'NEWBLOG',\n      data: data\n    });\n  };\n};\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INITBLOGS',\n      data: blogs\n    });\n  };\n};\nexport const likeBlog = blog => {\n  return async dispatch => {\n    blog.likes += 1;\n    const data = await blogService.update(blog);\n    dispatch({\n      type: 'LIKEBLOG',\n      data: data\n    });\n  };\n};\nexport const removeBlog = blog => {\n  return async dispatch => {\n    const data = await blogService.remove(blog);\n    dispatch({\n      type: 'REMOVEBLOG',\n      data: data\n    });\n  };\n};\nexport const findBlog = id => {\n  console.log(id);\n  return dispatch => {\n    dispatch({\n      type: 'FINDBLOG',\n      id\n    });\n  };\n};\n\nconst blogReducer = (state = [], action) => {\n  console.log(action.id);\n  console.log(state);\n  let newState = null;\n\n  switch (action.type) {\n    case 'NEWBLOG':\n      return [...state, action.data].sort((a, b) => b.likes - a.likes);\n\n    case 'INITBLOGS':\n      return action.data.sort((a, b) => b.likes - a.likes);\n\n    case 'LIKEBLOG':\n      newState = state.filter(s => s.id !== action.data.id);\n      return [...newState, action.data].sort((a, b) => b.likes - a.likes);\n\n    case 'REMOVEBLOG':\n      newState = state.filter(s => s.id !== action.data.id);\n      return [...newState].sort((a, b) => b.likes - a.likes);\n\n    case 'FINDBLOG':\n      return state.filter(s => s.id === action.id);\n\n    default:\n      return state;\n  }\n};\n\nexport default blogReducer;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/reducers/blogReducer.js"],"names":["blogService","addNewBlog","blog","dispatch","data","create","type","initBlogs","blogs","getAll","likeBlog","likes","update","removeBlog","remove","findBlog","id","console","log","blogReducer","state","action","newState","sort","a","b","filter","s"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AAKA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAChC,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,IAAI,GAAG,MAAMJ,WAAW,CAACK,MAAZ,CAAmBH,IAAnB,CAAnB;AACAC,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,SADD;AAELF,MAAAA,IAAI,EAAEA;AAFD,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMG,SAAS,GAAG,MAAM;AAC3B,SAAO,MAAMJ,QAAN,IAAkB;AACrB,UAAMK,KAAK,GAAG,MAAMR,WAAW,CAACS,MAAZ,EAApB;AACAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,WADD;AAELF,MAAAA,IAAI,EAAEI;AAFD,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAWP,OAAO,MAAME,QAAQ,GAAIR,IAAD,IAAU;AAC9B,SAAO,MAAMC,QAAN,IAAkB;AACrBD,IAAAA,IAAI,CAACS,KAAL,IAAc,CAAd;AACA,UAAMP,IAAI,GAAG,MAAMJ,WAAW,CAACY,MAAZ,CAAmBV,IAAnB,CAAnB;AACAC,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,UADD;AAELF,MAAAA,IAAI,EAAEA;AAFD,KAAD,CAAR;AAIH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMS,UAAU,GAAIX,IAAD,IAAU;AAChC,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,IAAI,GAAG,MAAMJ,WAAW,CAACc,MAAZ,CAAmBZ,IAAnB,CAAnB;AACAC,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,YADD;AAELF,MAAAA,IAAI,EAAEA;AAFD,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMW,QAAQ,GAAIC,EAAD,IAAQ;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,SAAOb,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,UADD;AAELU,MAAAA;AAFK,KAAD,CAAR;AAIH,GALD;AAMH,CARM;;AAWP,MAAMG,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAExCJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACL,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,MAAIE,QAAQ,GAAG,IAAf;;AACA,UAAOD,MAAM,CAACf,IAAd;AAEA,SAAK,SAAL;AACI,aAAO,CAAC,GAAGc,KAAJ,EAAWC,MAAM,CAACjB,IAAlB,EAAwBmB,IAAxB,CAA6B,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACd,KAAF,GAAQa,CAAC,CAACb,KAAhD,CAAP;;AAEJ,SAAK,WAAL;AACI,aAAOU,MAAM,CAACjB,IAAP,CAAYmB,IAAZ,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAAUA,CAAC,CAACd,KAAF,GAAQa,CAAC,CAACb,KAArC,CAAP;;AAEJ,SAAK,UAAL;AACIW,MAAAA,QAAQ,GAAGF,KAAK,CAACM,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACX,EAAF,KAASK,MAAM,CAACjB,IAAP,CAAYY,EAAvC,CAAX;AACA,aAAO,CAAC,GAAGM,QAAJ,EAAcD,MAAM,CAACjB,IAArB,EAA2BmB,IAA3B,CAAgC,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACd,KAAF,GAAUa,CAAC,CAACb,KAArD,CAAP;;AACJ,SAAK,YAAL;AACIW,MAAAA,QAAQ,GAAGF,KAAK,CAACM,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACX,EAAF,KAASK,MAAM,CAACjB,IAAP,CAAYY,EAAvC,CAAX;AACA,aAAO,CAAC,GAAGM,QAAJ,EAAcC,IAAd,CAAmB,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACd,KAAF,GAAUa,CAAC,CAACb,KAAxC,CAAP;;AACJ,SAAK,UAAL;AACI,aAAOS,KAAK,CAACM,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACX,EAAF,KAASK,MAAM,CAACL,EAAlC,CAAP;;AACJ;AACI,aAAOI,KAAP;AAjBJ;AAmBH,CAxBD;;AA2BA,eAAeD,WAAf","sourcesContent":["import blogService from '../services/blogs'\n\n\n\n\nexport const addNewBlog = (blog) => {\n    return async dispatch => {\n        const data = await blogService.create(blog)\n        dispatch({\n            type: 'NEWBLOG',\n            data: data\n        })\n    }\n}\n\nexport const initBlogs = () => {\n    return async dispatch => {\n        const blogs = await blogService.getAll()\n        dispatch({\n            type: 'INITBLOGS',\n            data: blogs\n        })\n    }\n}\n\n\nexport const likeBlog = (blog) => {\n    return async dispatch => {\n        blog.likes += 1\n        const data = await blogService.update(blog)\n        dispatch({\n            type: 'LIKEBLOG',\n            data: data\n        })\n    }\n}\n\nexport const removeBlog = (blog) => {\n    return async dispatch => {\n        const data = await blogService.remove(blog)\n        dispatch({\n            type: 'REMOVEBLOG',\n            data: data\n        })\n    }\n}\n\nexport const findBlog = (id) => {\n    console.log(id)\n    return dispatch => {\n        dispatch({\n            type: 'FINDBLOG',\n            id\n        })\n    }\n}\n\n\nconst blogReducer = (state = [], action) => {\n\n    console.log(action.id)\n    console.log(state)\n    let newState = null\n    switch(action.type){\n\n    case 'NEWBLOG':\n        return [...state, action.data].sort((a,b) => b.likes-a.likes)\n\n    case 'INITBLOGS':\n        return action.data.sort((a,b) =>  b.likes-a.likes )\n\n    case 'LIKEBLOG':\n        newState = state.filter(s => s.id !== action.data.id)\n        return [...newState, action.data].sort((a,b) => b.likes - a.likes)\n    case 'REMOVEBLOG':\n        newState = state.filter(s => s.id !== action.data.id)\n        return [...newState].sort((a,b) => b.likes - a.likes)\n    case 'FINDBLOG':\n        return state.filter(s => s.id === action.id)\n    default:\n        return state\n    }\n}\n\n\nexport default blogReducer\n\n\n\n"]},"metadata":{},"sourceType":"module"}