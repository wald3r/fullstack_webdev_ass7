{"ast":null,"code":"var _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/components/Login.js\";\nimport React from 'react';\nimport LoginForm from './LoginForm';\nimport loginService from '../services/login';\nimport { connect } from 'react-redux';\nimport { handleNotification } from '../reducers/notificationReducer';\nimport { handleError } from '../reducers/errorReducer';\nimport { setUser } from '../reducers/userReducer';\n\nconst Login = ({\n  handleNotification,\n  username,\n  password,\n  handleError,\n  resetusername,\n  resetpasswd,\n  setUser\n}) => {\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log('loggin in with: ', username.value, password.value);\n\n    try {\n      //const newUser = await loginService.login({ username: username.value, password: password.value })\n      setUser(username, password);\n      handleNotification('Login successfull!', 5000);\n      resetusername();\n      resetpasswd();\n    } catch (exception) {\n      handleError('Login failed!', 5000);\n      resetusername();\n      resetpasswd();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    username: username,\n    password: password,\n    handleSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification,\n    error: state.error,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = {\n  handleNotification,\n  handleError,\n  setUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/components/Login.js"],"names":["React","LoginForm","loginService","connect","handleNotification","handleError","setUser","Login","username","password","resetusername","resetpasswd","handleLogin","event","preventDefault","console","log","value","exception","mapStateToProps","state","notification","error","user","mapDispatchToProps"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,OAAT,QAAwB,yBAAxB;;AAEA,MAAMC,KAAK,GAAG,CAAE;AAAEH,EAAAA,kBAAF;AAAsBI,EAAAA,QAAtB;AAAgCC,EAAAA,QAAhC;AAA0CJ,EAAAA,WAA1C;AAAuDK,EAAAA,aAAvD;AAAsEC,EAAAA,WAAtE;AAAmFL,EAAAA;AAAnF,CAAF,KAAoG;AAG9G,QAAMM,WAAW,GAAG,MAAMC,KAAN,IAAe;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,QAAQ,CAACS,KAAzC,EAAgDR,QAAQ,CAACQ,KAAzD;;AACA,QAAG;AACC;AACAX,MAAAA,OAAO,CAACE,QAAD,EAAWC,QAAX,CAAP;AACAL,MAAAA,kBAAkB,CAAC,oBAAD,EAAuB,IAAvB,CAAlB;AACAM,MAAAA,aAAa;AACbC,MAAAA,WAAW;AAEd,KAPD,CAOC,OAAMO,SAAN,EAAgB;AACbb,MAAAA,WAAW,CAAC,eAAD,EAAkB,IAAlB,CAAX;AACAK,MAAAA,aAAa;AACbC,MAAAA,WAAW;AACd;AAEJ,GAhBD;;AAkBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,QAAQ,EAAEH,QADd;AAEI,IAAA,QAAQ,EAAEC,QAFd;AAGI,IAAA,YAAY,EAAEG,WAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AASH,CA9BD;;AAgCA,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,YAAY,EAAED,KAAK,CAACC,YADjB;AAEHC,IAAAA,KAAK,EAAEF,KAAK,CAACE,KAFV;AAGHC,IAAAA,IAAI,EAAEH,KAAK,CAACG;AAHT,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAG;AAEvBpB,EAAAA,kBAFuB;AAGvBC,EAAAA,WAHuB;AAIvBC,EAAAA;AAJuB,CAA3B;AAQA,eAAeH,OAAO,CAACgB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CjB,KAA7C,CAAf","sourcesContent":["\nimport React from 'react'\nimport LoginForm from './LoginForm'\nimport loginService from '../services/login'\nimport { connect } from 'react-redux'\nimport { handleNotification } from '../reducers/notificationReducer'\nimport { handleError } from '../reducers/errorReducer'\nimport { setUser } from '../reducers/userReducer'\n\nconst Login = ( { handleNotification, username, password, handleError, resetusername, resetpasswd, setUser } ) => {\n\n\n    const handleLogin = async event => {\n        event.preventDefault()\n        console.log('loggin in with: ', username.value, password.value)\n        try{\n            //const newUser = await loginService.login({ username: username.value, password: password.value })\n            setUser(username, password)\n            handleNotification('Login successfull!', 5000)\n            resetusername()\n            resetpasswd()\n\n        }catch(exception){\n            handleError('Login failed!', 5000)\n            resetusername()\n            resetpasswd()\n        }\n\n    }\n\n    return(\n        <div>\n            <LoginForm\n                username={username}\n                password={password}\n                handleSubmit={handleLogin}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        notification: state.notification,\n        error: state.error,\n        user: state.user\n    }\n}\n\nconst mapDispatchToProps = {\n\n    handleNotification,\n    handleError,\n    setUser,\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}