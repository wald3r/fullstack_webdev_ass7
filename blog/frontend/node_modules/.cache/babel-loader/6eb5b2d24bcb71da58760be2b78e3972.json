{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/App.js\";\n\n/* eslint-disable no-unused-labels */\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport Notification from './components/Notification';\nimport Error from './components/Error';\nimport LoginForm from './components/LoginForm';\nimport AddBlogForm from './components/AddBlogForm';\nimport Togglable from './components/Togglable';\nimport { useUsername, usePassword } from './hooks';\nimport { initBlogs, addNewBlog, likeBlog, removeBlog } from './reducers/blogReducer';\nimport { handleNotification } from './reducers/notificationReducer';\nimport { setUser, removeUser } from './reducers/userReducer';\nimport { handleError } from './reducers/errorReducer';\nimport { connect } from 'react-redux';\nimport loginService from './services/login';\n\nconst App = props => {\n  const _useUsername = useUsername('username'),\n        resetusername = _useUsername.resetusername,\n        username = _objectWithoutProperties(_useUsername, [\"resetusername\"]);\n\n  const _usePassword = usePassword('password'),\n        resetpasswd = _usePassword.resetpasswd,\n        password = _objectWithoutProperties(_usePassword, [\"resetpasswd\"]);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        author = _useState4[0],\n        setAuthor = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        url = _useState6[0],\n        setUrl = _useState6[1];\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      props.setUser(user);\n      props.initBlogs();\n      setTitle('');\n      setAuthor('');\n      setUrl('');\n    }\n  }, [props]);\n\n  const handleLogout = () => {\n    try {\n      props.removeUser();\n      props.handleNotification('Logout successfully, 5000');\n    } catch (exception) {\n      props.handleError('Logout failed!', 5000);\n    }\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log('loggin in with', username, password);\n\n    try {\n      //const newUser = await loginService.login({ username: username.value, password: password.value })\n      await props.setUser(username.value, password.value);\n      console.log('test', props.user);\n      props.handleNotification('Login successfull!', 5000);\n      resetusername();\n      resetpasswd();\n    } catch (exception) {\n      props.handleError('Login failed!', 5000);\n      resetusername();\n      resetpasswd();\n    }\n  };\n\n  const handleAddBlog = event => {\n    event.preventDefault();\n    console.log('adding blog', title, author, url);\n    const newBlog = {\n      title: title,\n      author: author,\n      url: url\n    };\n    props.addNewBlog(newBlog);\n    props.handleNotification(\"a new blog \".concat(title, \" by \").concat(author, \" added\"), 5000);\n    setAuthor('');\n    setTitle('');\n    setUrl('');\n    window.location.reload();\n  };\n\n  const handleLikes = blog => {\n    props.likeBlog(blog);\n    props.handleNotification(\"you liked blog \".concat(blog.title, \" from author \").concat(blog.author), 5000);\n  };\n\n  const handleRemoval = blog => {\n    const result = window.confirm(\"Do you really want to delete blog \".concat(blog.title, \"?\"));\n\n    if (result) {\n      props.removeBlog(blog);\n      props.handleNotification(\"blog \".concat(blog.title, \" by \").concat(blog.author, \" got deleted\"), 5000);\n    }\n  };\n\n  if (props.user === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Notification, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(LoginForm, {\n      username: username,\n      password: password,\n      handleSubmit: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Notification, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Error, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, props.user.username, \" is logged in\", React.createElement(\"button\", {\n      onClick: handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"logout\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Togglable, {\n      buttonLabel: \"new Blog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(AddBlogForm, {\n      author: author,\n      title: title,\n      url: url,\n      handleAuthorChange: ({\n        target\n      }) => setAuthor(target.value),\n      handleTitleChange: ({\n        target\n      }) => setTitle(target.value),\n      handleUrlChange: ({\n        target\n      }) => setUrl(target.value),\n      handleAddBlog: handleAddBlog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, props.blogs.map(blog => React.createElement(Blog, {\n      key: blog.id,\n      blog: blog,\n      handleRemoval: () => handleRemoval(blog),\n      handleLikes: () => handleLikes(blog),\n      user: props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))));\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    blogs: state.blogs,\n    notification: state.notification,\n    error: state.error,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = {\n  initBlogs,\n  addNewBlog,\n  likeBlog,\n  removeBlog,\n  handleNotification,\n  handleError,\n  setUser,\n  removeUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/App.js"],"names":["React","useState","useEffect","Blog","Notification","Error","LoginForm","AddBlogForm","Togglable","useUsername","usePassword","initBlogs","addNewBlog","likeBlog","removeBlog","handleNotification","setUser","removeUser","handleError","connect","loginService","App","props","resetusername","username","resetpasswd","password","title","setTitle","author","setAuthor","url","setUrl","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","handleLogout","exception","handleLogin","event","preventDefault","console","log","value","handleAddBlog","newBlog","location","reload","handleLikes","blog","handleRemoval","result","confirm","target","blogs","map","id","mapStateToProps","state","notification","error","mapDispatchToProps"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-labels */\nimport React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\nimport LoginForm from './components/LoginForm'\nimport AddBlogForm from './components/AddBlogForm'\nimport Togglable from './components/Togglable'\nimport { useUsername, usePassword } from './hooks'\nimport { initBlogs, addNewBlog, likeBlog, removeBlog } from './reducers/blogReducer'\nimport { handleNotification } from './reducers/notificationReducer'\nimport { setUser, removeUser } from './reducers/userReducer'\nimport { handleError } from './reducers/errorReducer'\nimport { connect } from 'react-redux'\nimport loginService from './services/login'\n\n\nconst App = ( props ) => {\n\n    const { resetusername, ...username } = useUsername('username')\n    const { resetpasswd, ...password } = usePassword('password')\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [url, setUrl] = useState('')\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            props.setUser(user)\n            props.initBlogs()\n            setTitle('')\n            setAuthor('')\n            setUrl('')\n        }\n    }, [props])\n\n\n    const handleLogout = () => {\n        try{\n            props.removeUser()\n            props.handleNotification('Logout successfully, 5000')\n        }catch(exception){\n            props.handleError('Logout failed!', 5000)\n        }\n    }\n\n    const handleLogin = async event => {\n        event.preventDefault()\n        console.log('loggin in with', username, password)\n        try{\n            //const newUser = await loginService.login({ username: username.value, password: password.value })\n            await props.setUser(username.value, password.value)\n            console.log('test', props.user)\n            props.handleNotification('Login successfull!', 5000)\n            resetusername()\n            resetpasswd()\n\n        }catch(exception){\n            props.handleError('Login failed!', 5000)\n            resetusername()\n            resetpasswd()\n        }\n\n    }\n\n    const handleAddBlog = event => {\n        event.preventDefault()\n        console.log('adding blog', title, author, url)\n\n        const newBlog = {\n            title: title,\n            author: author,\n            url: url,\n        }\n        props.addNewBlog(newBlog)\n        props.handleNotification(`a new blog ${title} by ${author} added`, 5000)\n        setAuthor('')\n        setTitle('')\n        setUrl('')\n        window.location.reload()\n\n    }\n\n    const handleLikes = (blog) => {\n        props.likeBlog(blog)\n        props.handleNotification(`you liked blog ${blog.title} from author ${blog.author}`, 5000)\n    }\n\n\n    const handleRemoval = (blog) => {\n        const result = window.confirm(`Do you really want to delete blog ${blog.title}?`)\n        if(result){\n            props.removeBlog(blog)\n            props.handleNotification(`blog ${blog.title} by ${blog.author} got deleted`, 5000)\n        }\n    }\n\n    if(props.user === null){\n        return(\n            <div>\n                <Notification />\n                <Error />\n                <LoginForm\n                    username={username}\n                    password={password}\n                    handleSubmit={handleLogin}\n                />\n            </div>\n        )\n    }else{\n        return(\n            <div>\n                <Notification  />\n                <Error />\n\n                <div>\n                    {props.user.username} is logged in\n                    <button onClick={handleLogout}>logout</button>\n                </div>\n                <div>\n                    <Togglable buttonLabel='new Blog'>\n                        <AddBlogForm\n                            author={author}\n                            title={title}\n                            url={url}\n                            handleAuthorChange={({ target }) => setAuthor(target.value)}\n                            handleTitleChange={({ target }) => setTitle(target.value)}\n                            handleUrlChange={({ target }) => setUrl(target.value)}\n                            handleAddBlog={handleAddBlog}\n                        />\n                    </Togglable>\n                </div>\n                <ul>\n                    {props.blogs.map(blog =>\n                        <Blog\n                            key={blog.id}\n                            blog={blog}\n                            handleRemoval={() => handleRemoval(blog)}\n                            handleLikes={() => handleLikes(blog)}\n                            user={props.user} /> )}\n                </ul>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        blogs: state.blogs,\n        notification: state.notification,\n        error: state.error,\n        user: state.user,\n    }\n}\n\nconst mapDispatchToProps = {\n    initBlogs,\n    addNewBlog,\n    likeBlog,\n    removeBlog,\n    handleNotification,\n    handleError,\n    setUser,\n    removeUser,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)"]},"metadata":{},"sourceType":"module"}