{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass5/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass5/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport loginService from './services/login';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport Notification from './components/Notification';\nimport Error from './components/Error';\nimport LoginForm from './components/LoginForm';\nimport AddBlogForm from './components/AddBlogForm';\nimport Togglable from './components/Togglable';\nimport { useField } from './hooks';\n\nconst App = () => {\n  const username = useField('username');\n  const password = useField('password');\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        blogs = _useState4[0],\n        setBlogs = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        title = _useState6[0],\n        setTitle = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        author = _useState8[0],\n        setAuthor = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        url = _useState10[0],\n        setUrl = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        notification = _useState12[0],\n        setNotification = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        error = _useState14[0],\n        setError = _useState14[1];\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n      getBlogs();\n      setTitle('');\n      setAuthor('');\n      setUrl('');\n    }\n  }, []);\n\n  const getBlogs = async () => {\n    const allBlogs = await blogService.getAll();\n    setBlogs(allBlogs.sort((a, b) => b.likes - a.likes));\n  };\n\n  const handleLogout = () => {\n    try {\n      setUser(null);\n      window.localStorage.removeItem('loggedBlogappUser');\n      setNotification('Logout successfully');\n      setTimeout(() => {\n        setNotification('');\n      }, 5000);\n    } catch (exception) {\n      setError('Logout failed!');\n      setTimeout(() => {\n        setError('');\n      }, 5000);\n    }\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log('loggin in with', username, password);\n\n    try {\n      const newUser = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(newUser));\n      setNotification('Login successfull');\n      setTimeout(() => {\n        setNotification('');\n      }, 5000);\n      await getBlogs();\n      setUser(newUser);\n      blogService.setToken(newUser.token);\n      username.reset();\n      password.reset();\n    } catch (exception) {\n      setError('Login failed!');\n      setTimeout(() => {\n        setError('');\n      }, 5000);\n      username.reset();\n      password.reset();\n    }\n  };\n\n  const handleAddBlog = async event => {\n    event.preventDefault();\n    console.log('adding blog', title, author, url);\n    const newBlog = {\n      title: title,\n      author: author,\n      url: url\n    };\n    const response = await blogService.create(newBlog);\n    setBlogs(blogs.concat(response));\n    setNotification(\"a new blog \".concat(title, \" by \").concat(author, \" added\"));\n    setTimeout(() => {\n      setNotification('');\n    }, 5000);\n    setAuthor('');\n    setTitle('');\n    setUrl('');\n    window.location.reload();\n  };\n\n  const handleLikes = async blog => {\n    blog.likes += 1;\n    const response = await blogService.update(blog);\n    const someBlogs = blogs.filter(otherBlogs => otherBlogs.id !== blog.id);\n    const allBlogs = someBlogs.concat(response);\n    const sortedBlogs = allBlogs.sort((a, b) => b.likes - a.likes);\n    setBlogs(sortedBlogs);\n    setNotification(\"you liked blog \".concat(blog.title, \" from author \").concat(blog.author));\n    setTimeout(() => {\n      setNotification('');\n    }, 5000);\n  };\n\n  const handleRemoval = async blog => {\n    const result = window.confirm(\"Do you really want to delete blog \".concat(blog.title, \"?\"));\n\n    if (result) {\n      const response = await blogService.remove(blog);\n      console.log(response);\n      const otherBlogs = blogs.filter(otherBlogs => otherBlogs.id !== blog.id);\n      setBlogs(otherBlogs);\n      setNotification(\"blog \".concat(blog.title, \" by \").concat(blog.author, \" got deleted\"));\n      setTimeout(() => {\n        setNotification('');\n      }, 5000);\n    }\n  };\n\n  if (user === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Notification, {\n      message: notification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Error, {\n      message: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(LoginForm, {\n      username: ({\n        target\n      }) => username(target.value),\n      password: () => password(),\n      handleSubmit: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Notification, {\n      message: notification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Error, {\n      message: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, user.username, \" is logged in\", React.createElement(\"button\", {\n      onClick: handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"logout\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Togglable, {\n      buttonLabel: \"new Blog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(AddBlogForm, {\n      author: author,\n      title: title,\n      url: url,\n      handleAuthorChange: ({\n        target\n      }) => setAuthor(target.value),\n      handleTitleChange: ({\n        target\n      }) => setTitle(target.value),\n      handleUrlChange: ({\n        target\n      }) => setUrl(target.value),\n      handleAddBlog: handleAddBlog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, blogs.map(blog => React.createElement(Blog, {\n      key: blog.id,\n      blog: blog,\n      handleRemoval: () => handleRemoval(blog),\n      handleLikes: () => handleLikes(blog),\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }))));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass5/frontend/src/App.js"],"names":["React","useState","useEffect","loginService","Blog","blogService","Notification","Error","LoginForm","AddBlogForm","Togglable","useField","App","username","password","user","setUser","blogs","setBlogs","title","setTitle","author","setAuthor","url","setUrl","notification","setNotification","error","setError","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","getBlogs","allBlogs","getAll","sort","a","b","likes","handleLogout","removeItem","setTimeout","exception","handleLogin","event","preventDefault","console","log","newUser","login","setItem","stringify","reset","handleAddBlog","newBlog","response","create","concat","location","reload","handleLikes","blog","update","someBlogs","filter","otherBlogs","id","sortedBlogs","handleRemoval","result","confirm","remove","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport loginService from './services/login'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\nimport LoginForm from './components/LoginForm'\nimport AddBlogForm from './components/AddBlogForm'\nimport Togglable from './components/Togglable'\nimport { useField } from './hooks'\n\nconst App = () => {\n    const username = useField('username')\n    const password = useField('password')\n    const [user, setUser] = useState(null)\n    const [blogs, setBlogs] = useState([])\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [url, setUrl] = useState('')\n    const [notification, setNotification] = useState('')\n    const [error, setError] = useState('')\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            blogService.setToken(user.token)\n            getBlogs()\n            setTitle('')\n            setAuthor('')\n            setUrl('')\n        }\n    }, [])\n\n\n    const getBlogs = async () => {\n        const allBlogs = await blogService.getAll()\n        setBlogs(allBlogs.sort((a,b) =>  b.likes-a.likes ))\n    }\n\n    const handleLogout = () => {\n        try{\n            setUser(null)\n            window.localStorage.removeItem('loggedBlogappUser')\n            setNotification('Logout successfully')\n            setTimeout(() => { setNotification('')}, 5000)\n        }catch(exception){\n            setError('Logout failed!')\n            setTimeout(() => { setError('')}, 5000)\n        }\n    }\n\n    const handleLogin = async event => {\n        event.preventDefault()\n        console.log('loggin in with', username, password)\n        try{\n            const newUser = await loginService.login({ username, password })\n            window.localStorage.setItem('loggedBlogappUser', JSON.stringify(newUser))\n\n            setNotification('Login successfull')\n            setTimeout(() => { setNotification('')}, 5000)\n\n            await getBlogs()\n            setUser(newUser)\n\n            blogService.setToken(newUser.token)\n            username.reset()\n            password.reset()\n\n        }catch(exception){\n            setError('Login failed!')\n            setTimeout(() => { setError('')}, 5000)\n            username.reset()\n            password.reset()\n        }\n\n    }\n\n    const handleAddBlog = async event => {\n        event.preventDefault()\n        console.log('adding blog', title, author, url)\n\n        const newBlog = {\n            title: title,\n            author: author,\n            url: url,\n        }\n        const response = await blogService.create(newBlog)\n        setBlogs(blogs.concat(response))\n        setNotification(`a new blog ${title} by ${author} added`)\n        setTimeout(() => { setNotification('')}, 5000)\n        setAuthor('')\n        setTitle('')\n        setUrl('')\n        window.location.reload()\n\n    }\n\n    const handleLikes = async (blog) => {\n        blog.likes += 1\n        const response = await blogService.update(blog)\n        const someBlogs = blogs.filter(otherBlogs => otherBlogs.id !== blog.id)\n        const allBlogs = someBlogs.concat(response)\n        const sortedBlogs = allBlogs.sort((a,b) =>  b.likes-a.likes )\n        setBlogs(sortedBlogs)\n        setNotification(`you liked blog ${blog.title} from author ${blog.author}`)\n        setTimeout(() => { setNotification('')}, 5000)\n    }\n\n\n    const handleRemoval = async (blog) => {\n        const result = window.confirm(`Do you really want to delete blog ${blog.title}?`)\n        if(result){\n            const response = await blogService.remove(blog)\n            console.log(response)\n            const otherBlogs = blogs.filter(otherBlogs => otherBlogs.id !== blog.id)\n            setBlogs(otherBlogs)\n            setNotification(`blog ${blog.title} by ${blog.author} got deleted`)\n            setTimeout(() => { setNotification('')}, 5000)\n        }\n    }\n\n    if(user === null){\n        return(\n            <div>\n                <Notification message={notification}/>\n                <Error message={error}/>\n                <LoginForm\n                    username={( {target} ) => username( target.value )}\n                    password={() => password()}\n                    handleSubmit={handleLogin}\n                />\n            </div>\n        )\n    }else{\n        return(\n            <div>\n                <Notification message={notification} />\n                <Error message={error}/>\n\n                <div>\n                    {user.username} is logged in\n                    <button onClick={handleLogout}>logout</button>\n                </div>\n                <div>\n                    <Togglable buttonLabel='new Blog'>\n                        <AddBlogForm\n                            author={author}\n                            title={title}\n                            url={url}\n                            handleAuthorChange={({ target }) => setAuthor(target.value)}\n                            handleTitleChange={({ target }) => setTitle(target.value)}\n                            handleUrlChange={({ target }) => setUrl(target.value)}\n                            handleAddBlog={handleAddBlog}\n                        />\n                    </Togglable>\n                </div>\n                <ul>\n                    {blogs.map(blog =>\n                        <Blog\n                            key={blog.id}\n                            blog={blog}\n                            handleRemoval={() => handleRemoval(blog)}\n                            handleLikes={() => handleLikes(blog)}\n                            user={user} /> )}\n                </ul>\n            </div>\n        )\n    }\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}