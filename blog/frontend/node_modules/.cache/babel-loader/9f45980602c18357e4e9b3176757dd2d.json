{"ast":null,"code":"import blogService from '../services/blogs';\nexport const addNewBlog = blog => {\n  return dispatch => {\n    dispatch({\n      type: 'NEWBLOG',\n      data: blog\n    });\n  };\n};\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = blogService.getAll();\n    dispatch({\n      type: 'INITBLOGS',\n      data: blogs\n    });\n  };\n};\nexport const likeBlog = () => {};\n\nconst blogReducer = (state = [], action) => {\n  console.log(state);\n  console.log(action);\n\n  switch (action.type) {\n    case 'NEWBLOG':\n      return state;\n\n    case 'INITBLOGS':\n      return action.data.sort((a, b) => b.likes - a.likes);\n\n    case 'LIKEBLOG':\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default blogReducer;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/reducers/blogReducer.js"],"names":["blogService","addNewBlog","blog","dispatch","type","data","initBlogs","blogs","getAll","likeBlog","blogReducer","state","action","console","log","sort","a","b","likes"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AAKA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAChC,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,SADD;AAELC,MAAAA,IAAI,EAAEH;AAFD,KAAD,CAAR;AAIH,GALD;AAMH,CAPM;AASP,OAAO,MAAMI,SAAS,GAAG,MAAM;AAC3B,SAAO,MAAMH,QAAN,IAAkB;AACrB,UAAMI,KAAK,GAAGP,WAAW,CAACQ,MAAZ,EAAd;AACAL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,WADD;AAELC,MAAAA,IAAI,EAAEE;AAFD,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAWP,OAAO,MAAME,QAAQ,GAAG,MAAM,CAE7B,CAFM;;AAMP,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAExCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,UAAOA,MAAM,CAACR,IAAd;AAEA,SAAK,SAAL;AACI,aAAOO,KAAP;;AAEJ,SAAK,WAAL;AACI,aAAOC,MAAM,CAACP,IAAP,CAAYU,IAAZ,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAAUA,CAAC,CAACC,KAAF,GAAQF,CAAC,CAACE,KAArC,CAAP;;AAEJ,SAAK,UAAL;AACI,aAAOP,KAAP;;AACJ;AACI,aAAOA,KAAP;AAXJ;AAaH,CAlBD;;AAqBA,eAAeD,WAAf","sourcesContent":["import blogService from '../services/blogs'\n\n\n\n\nexport const addNewBlog = (blog) => {\n    return dispatch => {\n        dispatch({\n            type: 'NEWBLOG',\n            data: blog\n        })\n    }\n}\n\nexport const initBlogs = () => {\n    return async dispatch => {\n        const blogs = blogService.getAll()\n        dispatch({\n            type: 'INITBLOGS',\n            data: blogs\n        })\n    }\n}\n\n\nexport const likeBlog = () => {\n\n}\n\n\n\nconst blogReducer = (state = [], action) => {\n\n    console.log(state)\n    console.log(action)\n\n    switch(action.type){\n\n    case 'NEWBLOG':\n        return state\n\n    case 'INITBLOGS':\n        return action.data.sort((a,b) =>  b.likes-a.likes )\n\n    case 'LIKEBLOG':\n        return state\n    default:\n        return state\n    }\n}\n\n\nexport default blogReducer\n\n\n\n"]},"metadata":{},"sourceType":"module"}