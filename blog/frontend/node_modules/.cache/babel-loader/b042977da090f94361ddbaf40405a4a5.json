{"ast":null,"code":"const setNotification = message => {\n  return {\n    type: 'NOTIFICAITON',\n    data: message\n  };\n};\n\nconst removeNotification = () => {\n  return {\n    type: 'REMOVE',\n    data: ''\n  };\n};\n\nexport const handleNotification = (message, time) => {\n  return async dispatch => {\n    dispatch(setNotification(message));\n    setTimeout(() => {\n      dispatch(removeNotification());\n    }, time);\n  };\n};\n\nconst notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'NOTIFICATION':\n      return action.data;\n\n    case 'REMOVE':\n      return '';\n\n    default:\n      return state;\n  }\n};\n\nexport default notificationReducer;","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/reducers/notificationReducer.js"],"names":["setNotification","message","type","data","removeNotification","handleNotification","time","dispatch","setTimeout","notificationReducer","state","action"],"mappings":"AAEA,MAAMA,eAAe,GAAIC,OAAD,IAAa;AACjC,SAAQ;AACJC,IAAAA,IAAI,EAAE,cADF;AAEJC,IAAAA,IAAI,EAAEF;AAFF,GAAR;AAIH,CALD;;AAQA,MAAMG,kBAAkB,GAAG,MAAM;AAC7B,SAAQ;AACJF,IAAAA,IAAI,EAAE,QADF;AAEJC,IAAAA,IAAI,EAAE;AAFF,GAAR;AAIH,CALD;;AAQA,OAAO,MAAME,kBAAkB,GAAG,CAACJ,OAAD,EAAUK,IAAV,KAAmB;AACjD,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAACP,eAAe,CAACC,OAAD,CAAhB,CAAR;AACAO,IAAAA,UAAU,CAAC,MAAM;AAACD,MAAAA,QAAQ,CAACH,kBAAkB,EAAnB,CAAR;AAA+B,KAAvC,EAAyCE,IAAzC,CAAV;AACH,GAHD;AAIH,CALM;;AAQP,MAAMG,mBAAmB,GAAG,CAACC,KAAK,GAAG,IAAT,EAAeC,MAAf,KAA0B;AAElD,UAAOA,MAAM,CAACT,IAAd;AACA,SAAK,cAAL;AACI,aAAOS,MAAM,CAACR,IAAd;;AACJ,SAAK,QAAL;AACI,aAAO,EAAP;;AAEJ;AACI,aAAOO,KAAP;AAPJ;AASH,CAXD;;AAcA,eAAeD,mBAAf","sourcesContent":["\n\nconst setNotification = (message) => {\n    return ({\n        type: 'NOTIFICAITON',\n        data: message\n    })\n}\n\n\nconst removeNotification = () => {\n    return ({\n        type: 'REMOVE',\n        data: ''\n    })\n}\n\n\nexport const handleNotification = (message, time) => {\n    return async dispatch => {\n        dispatch(setNotification(message))\n        setTimeout(() => {dispatch(removeNotification())}, time)\n    }\n}\n\n\nconst notificationReducer = (state = null, action) => {\n\n    switch(action.type){\n    case 'NOTIFICATION':\n        return action.data\n    case 'REMOVE':\n        return ''\n\n    default:\n        return state\n    }\n}\n\n\nexport default notificationReducer"]},"metadata":{},"sourceType":"module"}