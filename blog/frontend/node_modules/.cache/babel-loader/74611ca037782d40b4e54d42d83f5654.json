{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = \"bearer \".concat(newToken);\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.datas;\n};\n\nconst update = async blog => {\n  const response = await axios.put(\"\".concat(baseUrl, \"/\").concat(blog.id), blog);\n  return response.data;\n};\n\nconst create = async newBlog => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newBlog, config);\n  return response.data;\n};\n\nconst remove = async blog => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.delete(\"\".concat(baseUrl, \"/\").concat(blog.id), config);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  update,\n  remove\n};","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","response","get","datas","update","blog","put","id","data","create","newBlog","config","headers","Authorization","post","remove","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AACzBF,EAAAA,KAAK,oBAAaE,QAAb,CAAL;AACH,CAFD;;AAIA,MAAMC,MAAM,GAAG,YAAY;AACvB,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAvB;AACA,SAAOK,QAAQ,CAACE,KAAhB;AACH,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAMC,IAAN,IAAc;AACzB,QAAMJ,QAAQ,GAAG,MAAMN,KAAK,CAACW,GAAN,WAAaV,OAAb,cAAwBS,IAAI,CAACE,EAA7B,GAAmCF,IAAnC,CAAvB;AACA,SAAOJ,QAAQ,CAACO,IAAhB;AAEH,CAJD;;AAQA,MAAMC,MAAM,GAAG,MAAMC,OAAN,IAAiB;AAE5B,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEhB;AAAjB;AADE,GAAf;AAIA,QAAMI,QAAQ,GAAG,MAAMN,KAAK,CAACmB,IAAN,CAAWlB,OAAX,EAAoBc,OAApB,EAA6BC,MAA7B,CAAvB;AACA,SAAOV,QAAQ,CAACO,IAAhB;AACH,CARD;;AAWA,MAAMO,MAAM,GAAG,MAAMV,IAAN,IAAc;AAEzB,QAAMM,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEhB;AAAjB;AADE,GAAf;AAGA,QAAMI,QAAQ,GAAG,MAAMN,KAAK,CAACqB,MAAN,WAAgBpB,OAAhB,cAA2BS,IAAI,CAACE,EAAhC,GAAsCI,MAAtC,CAAvB;AACA,SAAOV,QAAQ,CAACO,IAAhB;AAEH,CARD;;AAUA,eAAe;AAAER,EAAAA,MAAF;AAAUS,EAAAA,MAAV;AAAkBX,EAAAA,QAAlB;AAA4BM,EAAAA,MAA5B;AAAoCW,EAAAA;AAApC,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.datas\n}\n\nconst update = async blog => {\n    const response = await axios.put(`${baseUrl}/${blog.id}`, blog)\n    return response.data\n\n}\n\n\n\nconst create = async newBlog => {\n\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const response = await axios.post(baseUrl, newBlog, config)\n    return response.data\n}\n\n\nconst remove = async blog => {\n\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.delete(`${baseUrl}/${blog.id}`, config)\n    return response.data\n\n}\n\nexport default { getAll, create, setToken, update, remove }"]},"metadata":{},"sourceType":"module"}