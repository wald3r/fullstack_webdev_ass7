{"ast":null,"code":"import _slicedToArray from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/App.js\";\n\n/* eslint-disable no-unused-labels */\nimport React, { useState, useEffect } from 'react';\nimport loginService from './services/login';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport Notification from './components/Notification';\nimport Error from './components/Error';\nimport LoginForm from './components/LoginForm';\nimport AddBlogForm from './components/AddBlogForm';\nimport Togglable from './components/Togglable';\nimport { useUsername, usePassword } from './hooks';\nimport { initBlogs, addNewBlog, likeBlog, removeBlog } from './reducers/blogReducer';\nimport { handleNotification } from './reducers/notificationReducer';\nimport { connect } from 'react-redux';\n\nconst App = props => {\n  const _useUsername = useUsername('username'),\n        resetusername = _useUsername.resetusername,\n        username = _objectWithoutProperties(_useUsername, [\"resetusername\"]);\n\n  const _usePassword = usePassword('password'),\n        resetpasswd = _usePassword.resetpasswd,\n        password = _objectWithoutProperties(_usePassword, [\"resetpasswd\"]);\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        title = _useState4[0],\n        setTitle = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        author = _useState6[0],\n        setAuthor = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        url = _useState8[0],\n        setUrl = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        error = _useState10[0],\n        setError = _useState10[1];\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n      props.initBlogs();\n      setTitle('');\n      setAuthor('');\n      setUrl('');\n    }\n  }, []);\n\n  const handleLogout = () => {\n    try {\n      setUser(null);\n      window.localStorage.removeItem('loggedBlogappUser');\n      props.handleNotification('Logout successfully, 5000');\n    } catch (exception) {\n      setError('Logout failed!');\n      setTimeout(() => {\n        setError('');\n      }, 5000);\n    }\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log('loggin in with', username, password);\n\n    try {\n      const newUser = await loginService.login({\n        username: username.value,\n        password: password.value\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(newUser));\n      props.handleNotification('Login successfull!', 5000);\n      setUser(newUser);\n      blogService.setToken(newUser.token);\n      resetusername();\n      resetpasswd();\n    } catch (exception) {\n      setError('Login failed!');\n      setTimeout(() => {\n        setError('');\n      }, 5000);\n      resetusername();\n      resetpasswd();\n    }\n  };\n\n  const handleAddBlog = async event => {\n    event.preventDefault();\n    console.log('adding blog', title, author, url);\n    const newBlog = {\n      title: title,\n      author: author,\n      url: url\n    };\n    props.addNewBlog(newBlog);\n    props.handleNotification(\"a new blog \".concat(title, \" by \").concat(author, \" added\"), 5000);\n    setAuthor('');\n    setTitle('');\n    setUrl('');\n    window.location.reload();\n  };\n\n  const handleLikes = async blog => {\n    props.likeBlog(blog);\n    props.handleNotification(\"you liked blog \".concat(blog.title, \" from author \").concat(blog.author), 5000);\n  };\n\n  const handleRemoval = async blog => {\n    const result = window.confirm(\"Do you really want to delete blog \".concat(blog.title, \"?\"));\n\n    if (result) {\n      props.removeBlog(blog);\n      props.handleNotification(\"blog \".concat(blog.title, \" by \").concat(blog.author, \" got deleted\"), 5000);\n    }\n  };\n\n  if (user === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Notification, {\n      message: props.notification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Error, {\n      message: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(LoginForm, {\n      username: username,\n      password: password,\n      handleSubmit: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Notification, {\n      message: props.notification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Error, {\n      message: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, user.username, \" is logged in\", React.createElement(\"button\", {\n      onClick: handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"logout\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Togglable, {\n      buttonLabel: \"new Blog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(AddBlogForm, {\n      author: author,\n      title: title,\n      url: url,\n      handleAuthorChange: ({\n        target\n      }) => setAuthor(target.value),\n      handleTitleChange: ({\n        target\n      }) => setTitle(target.value),\n      handleUrlChange: ({\n        target\n      }) => setUrl(target.value),\n      handleAddBlog: handleAddBlog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, props.blogs.map(blog => React.createElement(Blog, {\n      key: blog.id,\n      blog: blog,\n      handleRemoval: () => handleRemoval(blog),\n      handleLikes: () => handleLikes(blog),\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))));\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    blogs: state.blogs,\n    notification: state.notification\n  };\n};\n\nconst mapDispatchToProps = {\n  initBlogs,\n  addNewBlog,\n  likeBlog,\n  removeBlog,\n  handleNotification\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/App.js"],"names":["React","useState","useEffect","loginService","Blog","blogService","Notification","Error","LoginForm","AddBlogForm","Togglable","useUsername","usePassword","initBlogs","addNewBlog","likeBlog","removeBlog","handleNotification","connect","App","props","resetusername","username","resetpasswd","password","user","setUser","title","setTitle","author","setAuthor","url","setUrl","error","setError","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogout","removeItem","exception","setTimeout","handleLogin","event","preventDefault","console","log","newUser","login","value","setItem","stringify","handleAddBlog","newBlog","location","reload","handleLikes","blog","handleRemoval","result","confirm","notification","target","blogs","map","id","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-labels */\nimport React, { useState, useEffect } from 'react'\nimport loginService from './services/login'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\nimport LoginForm from './components/LoginForm'\nimport AddBlogForm from './components/AddBlogForm'\nimport Togglable from './components/Togglable'\nimport { useUsername, usePassword } from './hooks'\nimport { initBlogs, addNewBlog, likeBlog, removeBlog } from './reducers/blogReducer'\nimport { handleNotification } from './reducers/notificationReducer'\nimport { connect } from 'react-redux'\n\nconst App = ( props ) => {\n\n    const { resetusername, ...username } = useUsername('username')\n    const { resetpasswd, ...password } = usePassword('password')\n    const [user, setUser] = useState(null)\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [url, setUrl] = useState('')\n    const [error, setError] = useState('')\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            blogService.setToken(user.token)\n            props.initBlogs()\n            setTitle('')\n            setAuthor('')\n            setUrl('')\n        }\n    }, [])\n\n\n    const handleLogout = () => {\n        try{\n            setUser(null)\n            window.localStorage.removeItem('loggedBlogappUser')\n            props.handleNotification('Logout successfully, 5000')\n        }catch(exception){\n            setError('Logout failed!')\n            setTimeout(() => { setError('')}, 5000)\n        }\n    }\n\n    const handleLogin = async event => {\n        event.preventDefault()\n        console.log('loggin in with', username, password)\n        try{\n            const newUser = await loginService.login({ username: username.value, password: password.value })\n            window.localStorage.setItem('loggedBlogappUser', JSON.stringify(newUser))\n\n            props.handleNotification('Login successfull!', 5000)\n\n            setUser(newUser)\n\n            blogService.setToken(newUser.token)\n            resetusername()\n            resetpasswd()\n\n        }catch(exception){\n            setError('Login failed!')\n            setTimeout(() => { setError('')}, 5000)\n            resetusername()\n            resetpasswd()\n        }\n\n    }\n\n    const handleAddBlog = async event => {\n        event.preventDefault()\n        console.log('adding blog', title, author, url)\n\n        const newBlog = {\n            title: title,\n            author: author,\n            url: url,\n        }\n        props.addNewBlog(newBlog)\n        props.handleNotification(`a new blog ${title} by ${author} added`, 5000)\n        setAuthor('')\n        setTitle('')\n        setUrl('')\n        window.location.reload()\n\n    }\n\n    const handleLikes = async (blog) => {\n        props.likeBlog(blog)\n        props.handleNotification(`you liked blog ${blog.title} from author ${blog.author}`, 5000)\n    }\n\n\n    const handleRemoval = async (blog) => {\n        const result = window.confirm(`Do you really want to delete blog ${blog.title}?`)\n        if(result){\n            props.removeBlog(blog)\n            props.handleNotification(`blog ${blog.title} by ${blog.author} got deleted`, 5000)\n        }\n    }\n\n    if(user === null){\n        return(\n            <div>\n                <Notification message={props.notification}/>\n                <Error message={error}/>\n                <LoginForm\n                    username={username}\n                    password={password}\n                    handleSubmit={handleLogin}\n                />\n            </div>\n        )\n    }else{\n        return(\n            <div>\n                <Notification message={props.notification} />\n                <Error message={error}/>\n\n                <div>\n                    {user.username} is logged in\n                    <button onClick={handleLogout}>logout</button>\n                </div>\n                <div>\n                    <Togglable buttonLabel='new Blog'>\n                        <AddBlogForm\n                            author={author}\n                            title={title}\n                            url={url}\n                            handleAuthorChange={({ target }) => setAuthor(target.value)}\n                            handleTitleChange={({ target }) => setTitle(target.value)}\n                            handleUrlChange={({ target }) => setUrl(target.value)}\n                            handleAddBlog={handleAddBlog}\n                        />\n                    </Togglable>\n                </div>\n                <ul>\n                    {props.blogs.map(blog =>\n                        <Blog\n                            key={blog.id}\n                            blog={blog}\n                            handleRemoval={() => handleRemoval(blog)}\n                            handleLikes={() => handleLikes(blog)}\n                            user={user} /> )}\n                </ul>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        blogs: state.blogs,\n        notification: state.notification\n\n    }\n}\n\nconst mapDispatchToProps = {\n    initBlogs,\n    addNewBlog,\n    likeBlog,\n    removeBlog,\n    handleNotification\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)"]},"metadata":{},"sourceType":"module"}