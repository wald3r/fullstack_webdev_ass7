{"ast":null,"code":"var _jsxFileName = \"/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/components/Login.js\";\nimport React from 'react';\nimport LoginForm from './LoginForm';\nimport loginService from '../services/login';\nimport { connect } from 'react-redux';\nimport blogService from '../services/blogs';\nimport { handleNotification } from '../reducers/notificationReducer';\nimport { handleError } from '../reducers/errorReducer';\n\nconst Login = props => {\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const newUser = await loginService.login({\n        username: props.username.value,\n        password: props.password.value\n      }); //await props.setUser(username, password)\n\n      props.handleUser(newUser);\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(newUser));\n      blogService.setToken(newUser.token);\n      props.handleNotification('Login successfull!', 5000);\n      props.username.resetusername();\n      props.password.resetpasswd();\n    } catch (exception) {\n      props.handleError('Login failed!', 5000);\n      props.username.resetusername;\n      props.password.resetpasswd;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    username: props.username,\n    password: props.password,\n    handleSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = {\n  handleNotification,\n  handleError\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/walder/workspaces/fullstack_webdev/fullstack_webdev_ass7/blog/frontend/src/components/Login.js"],"names":["React","LoginForm","loginService","connect","blogService","handleNotification","handleError","Login","props","handleLogin","event","preventDefault","newUser","login","username","value","password","handleUser","window","localStorage","setItem","JSON","stringify","setToken","token","resetusername","resetpasswd","exception","mapStateToProps","state","notification","error","mapDispatchToProps"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,kBAAT,QAAmC,iCAAnC;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,QAAMC,WAAW,GAAG,MAAMC,KAAN,IAAe;AAC/BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAG;AACC,YAAMC,OAAO,GAAG,MAAMV,YAAY,CAACW,KAAb,CAAmB;AAAEC,QAAAA,QAAQ,EAAEN,KAAK,CAACM,QAAN,CAAeC,KAA3B;AAAkCC,QAAAA,QAAQ,EAAER,KAAK,CAACQ,QAAN,CAAeD;AAA3D,OAAnB,CAAtB,CADD,CAEC;;AACAP,MAAAA,KAAK,CAACS,UAAN,CAAiBL,OAAjB;AACAM,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,EAAiDC,IAAI,CAACC,SAAL,CAAeV,OAAf,CAAjD;AACAR,MAAAA,WAAW,CAACmB,QAAZ,CAAqBX,OAAO,CAACY,KAA7B;AACAhB,MAAAA,KAAK,CAACH,kBAAN,CAAyB,oBAAzB,EAA+C,IAA/C;AACAG,MAAAA,KAAK,CAACM,QAAN,CAAeW,aAAf;AACAjB,MAAAA,KAAK,CAACQ,QAAN,CAAeU,WAAf;AAEH,KAVD,CAUC,OAAMC,SAAN,EAAgB;AACbnB,MAAAA,KAAK,CAACF,WAAN,CAAkB,eAAlB,EAAmC,IAAnC;AACAE,MAAAA,KAAK,CAACM,QAAN,CAAeW,aAAf;AACAjB,MAAAA,KAAK,CAACQ,QAAN,CAAeU,WAAf;AACH;AAEJ,GAlBD;;AAoBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,QAAQ,EAAElB,KAAK,CAACM,QADpB;AAEI,IAAA,QAAQ,EAAEN,KAAK,CAACQ,QAFpB;AAGI,IAAA,YAAY,EAAEP,WAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AASH,CA/BD;;AAiCA,MAAMmB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,YAAY,EAAED,KAAK,CAACC,YADjB;AAEHC,IAAAA,KAAK,EAAEF,KAAK,CAACE;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAG;AAEvB3B,EAAAA,kBAFuB;AAGvBC,EAAAA;AAHuB,CAA3B;AAOA,eAAeH,OAAO,CAACyB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CzB,KAA7C,CAAf","sourcesContent":["\nimport React from 'react'\nimport LoginForm from './LoginForm'\nimport loginService from '../services/login'\nimport { connect } from 'react-redux'\nimport blogService from '../services/blogs'\nimport { handleNotification } from '../reducers/notificationReducer'\nimport { handleError } from '../reducers/errorReducer'\n\n\nconst Login = (props) => {\n\n    const handleLogin = async event => {\n        event.preventDefault()\n        try{\n            const newUser = await loginService.login({ username: props.username.value, password: props.password.value })\n            //await props.setUser(username, password)\n            props.handleUser(newUser)\n            window.localStorage.setItem('loggedBlogappUser', JSON.stringify(newUser))\n            blogService.setToken(newUser.token)\n            props.handleNotification('Login successfull!', 5000)\n            props.username.resetusername()\n            props.password.resetpasswd()\n\n        }catch(exception){\n            props.handleError('Login failed!', 5000)\n            props.username.resetusername\n            props.password.resetpasswd\n        }\n\n    }\n\n    return(\n        <div>\n            <LoginForm\n                username={props.username}\n                password={props.password}\n                handleSubmit={handleLogin}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        notification: state.notification,\n        error: state.error,\n    }\n}\n\nconst mapDispatchToProps = {\n\n    handleNotification,\n    handleError\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}